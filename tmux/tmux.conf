unbind C-b
set -g prefix C-Space

unbind r
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Reloaded tmux conf"

set -g mouse on

unbind |
unbind -
unbind % # Split vertically
unbind '"' # Split horizontally
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

set -g history-limit 10000

set -g base-index 1
set-window-option -g pane-base-index 1

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

set-window-option -g mode-keys vi

unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/aserowy/tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }
bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# color theme
run-shell "$XDG_CONFIG_HOME/tmux/plugins/tmux-nova/nova.tmux"
set -g @plugin 'o0th/tmux-nova'
set -g @nova-nerdfonts true
set -g @nova-segment-session "#{session_name}"
set -g @nova-segment-session-colors "#50fa7b #282a36"
set -g @nova-segment-prefix "#{?client_prefix,PREFIX,}"
set -g @nova-segment-prefix-colors "#282a36 #f8f8f2"
# set -g @nova-segment-whoami "#(whoami)@#h"
# set -g @nova-segment-whoami-colors "#50fa7b #282a36"
set -g @nova-pane "#I#{?pane_in_mode, ï‘  #{pane_mode},}:#W"
set -g @nova-rows 0
set -g @nova-segments-0-left "mode session"
# set -g @nova-segments-0-right "whoami"

set -g status-left-length 16
set -g status-position top

# nvim :checkhealth
set-option -sg escape-time 10
set-option -g focus-events on
set-option -g default-terminal "screen-256color"
set-option -sa terminal-features ',xterm-256color:RGB'

#######
# TPM #
#######

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'o0th/tmux-nova'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'laktak/extrakto'
# set -g @extrakto_grab_area 'window full'
run -b "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
